# DO NOT EDIT THIS FILE DIRECTLY!
# To generate this file, run, 'nox -e invoke -- gha.generate'

name: ci

on: [
  push,
  pull_request
]

jobs:

  pre-commit:
    name: Pre-Commit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Set Cache Key
      run: echo "::set-env name=PY::$(python --version --version | sha256sum | cut -d' ' -f1)"
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - uses: pre-commit/action@v1.0.1

  lint:
    runs-on: ubuntu-latest
    needs: pre-commit

    timeout-minutes: 120

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7 For Nox
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox-py2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Lint Requirements
      run: |
        nox --force-color -e lint --install-only

    - name: Run Lint
      env:
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e lint

  docs:
    runs-on: ubuntu-latest
    needs: pre-commit

    timeout-minutes: 120

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7 For Nox
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox-py2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Doc Requirements
      run: |
        nox --force-color -e 'docs(compress=True, update=False)' --install-only

    - name: Build Docs
      env:
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e 'docs(compress=True, update=False)'

    - uses: actions/upload-artifact@v1
      with:
        name: docs-html
        path: doc/html-archive.tar.xz

    - uses: actions/upload-artifact@v1
      with:
        name: docs-man
        path: doc/man-archive.tar.xz

  amazon-2:
    name: Amazon Linux 2
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-amazon-2'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-amazon-2

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-amazon-2'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-amazon-2

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-amazon-2

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Amazon Linux 2" || echo "Failed to upload test results"

  arch-lts:
    name: Arch Linux LTS
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-arch-lts'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-arch-lts

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-arch-lts'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-arch-lts

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-arch-lts

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Arch Linux LTS" || echo "Failed to upload test results"

  centos-7:
    name: CentOS 7
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-centos-7

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-centos-7

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-centos-7

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="CentOS 7" || echo "Failed to upload test results"

  centos-7-m2crypto:
    name: CentOS 7 M2Crypto
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-centos-7

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq-m2crypto'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-centos-7

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-centos-7

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="CentOS 7 M2Crypto" || echo "Failed to upload test results"

  centos-7-proxy:
    name: CentOS 7 Proxy
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-centos-7

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--proxy'
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-centos-7

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-centos-7

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="CentOS 7 Proxy" || echo "Failed to upload test results"

  centos-7-pycryptodome:
    name: CentOS 7 PyCryptodome
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-centos-7

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq-pycryptodome'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-centos-7

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-centos-7

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="CentOS 7 PyCryptodome" || echo "Failed to upload test results"

  centos-7-tcp:
    name: CentOS 7 TCP
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-centos-7

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-tcp'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-7'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-centos-7

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-centos-7

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="CentOS 7 TCP" || echo "Failed to upload test results"

  centos-8:
    name: CentOS 8
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-8'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-centos-8

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-centos-8'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-centos-8

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-centos-8

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="CentOS 8" || echo "Failed to upload test results"

  debian-10:
    name: Debian 10
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-debian-10'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-debian-10

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-debian-10'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-debian-10

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-debian-10

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Debian 10" || echo "Failed to upload test results"

  debian-9:
    name: Debian 9
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-debian-9'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-debian-9

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-debian-9'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-debian-9

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-debian-9

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Debian 9" || echo "Failed to upload test results"

  fedora-31:
    name: Fedora 31
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-fedora-31'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-fedora-31

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-fedora-31'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-fedora-31

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-fedora-31

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Fedora 31" || echo "Failed to upload test results"

  fedora-32:
    name: Fedora 32
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-fedora-32'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-fedora-32

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-fedora-32'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-fedora-32

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-fedora-32

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Fedora 32" || echo "Failed to upload test results"

  opensuse-15:
    name: Opensuse 15
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-opensuse-15'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-opensuse-15

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-opensuse-15'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-opensuse-15

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-opensuse-15

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Opensuse 15" || echo "Failed to upload test results"

  ubuntu-1604:
    name: Ubuntu 16.04
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-ubuntu-1604

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-ubuntu-1604

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-ubuntu-1604

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Ubuntu 16.04" || echo "Failed to upload test results"

  ubuntu-1604-m2crypto:
    name: Ubuntu 16.04 M2Crypto
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-ubuntu-1604

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq-m2crypto'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-ubuntu-1604

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-ubuntu-1604

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Ubuntu 16.04 M2Crypto" || echo "Failed to upload test results"

  ubuntu-1604-proxy:
    name: Ubuntu 16.04 Proxy
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-ubuntu-1604

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--proxy'
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-ubuntu-1604

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-ubuntu-1604

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Ubuntu 16.04 Proxy" || echo "Failed to upload test results"

  ubuntu-1604-pycryptodome:
    name: Ubuntu 16.04 PyCryptodome
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-ubuntu-1604

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq-pycryptodome'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-ubuntu-1604

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-ubuntu-1604

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Ubuntu 16.04 PyCryptodome" || echo "Failed to upload test results"

  ubuntu-1604-tcp:
    name: Ubuntu 16.04 TCP
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-ubuntu-1604

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-tcp'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1604'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-ubuntu-1604

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-ubuntu-1604

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Ubuntu 16.04 TCP" || echo "Failed to upload test results"

  ubuntu-1804:
    name: Ubuntu 18.04
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1804'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-ubuntu-1804

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-1804'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-ubuntu-1804

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-ubuntu-1804

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Ubuntu 18.04" || echo "Failed to upload test results"

  ubuntu-2004:
    name: Ubuntu 20.04
    runs-on: ubuntu-latest
    #needs: pre-commit

    timeout-minutes: 480

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set Env Keys
      run: |
        echo "::set-env name=RUBY::$(ruby --version | sha256sum | cut -d' ' -f1)"
        echo "::set-env name=BUNDLE_WITH::docker"
        echo "::set-env name=BUNDLE_WITHOUT::ec2 vagrant windows"

    - name: Set Cache Key
      run: |
        echo "RUBY=${{ env.RUBY }}"
        echo "BUNDLE_WITH=${{ env.BUNDLE_WITH }}"
        echo "BUNDLE_WITHOUT=${{ env.BUNDLE_WITHOUT }}"
        echo "::set-env name=BUNDLE_CACHE_KEY::$(echo ${{ env.RUBY }} ${{ env.BUNDLE_WITH }} ${{ env.BUNDLE_WITHOUT }} | sha256sum | cut -d' ' -f1)"

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ runner.os }}-${{ env.BUNDLE_CACHE_KEY }}-

    - name: bundle install
      run: |
        set -e
        set -x
        bundle config path vendor/bundle
        bundle config set with ${{ env.BUNDLE_WITH }}
        bundle config set without ${{ env.BUNDLE_WITHOUT }}
        bundle install --jobs 4 --retry 3

    - name: Generate SSH Key
      run: |
        set -e
        set -x
        ssh-keygen -t rsa -b 4096 -C "Test Kitchen Key" -f ~/.ssh/id_rsa -q -N ""

    - name: Converge Test Container
      env:
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-2004'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen converge --debug py3-ubuntu-2004

    - name: Run Tests
      env:
        NOX_ENV_NAME: 'runtests-zeromq'
        NOX_PASSTHROUGH_OPTS: '--ssh-tests'
        SALT_DOCKER_IMAGE: 'saltstack/ci-ubuntu-2004'
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen verify --debug py3-ubuntu-2004

    - name: Destroy Test Container
      if: always()
      run: |
        set -e
        set -x
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        bundle exec kitchen destroy py3-ubuntu-2004

    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Ubuntu 20.04" || echo "Failed to upload test results"

  macos:
    name: macOS Catalina 10.15
    #needs: pre-commit
    runs-on: macOS-latest

    timeout-minutes: 420

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7 For Nox
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox-py2

    - name: Test
      run: |
        nox --force-color -e 'runtests-zeromq-3(coverage=True)' -- --sysinfo --xml=artifacts/xml-unittests-output/test-results.xml -v --run-destructive

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="macOS Catalina 10.15" || echo "Failed to upload test results"

  windows:
    name: Windows Server 2019
    #needs: pre-commit
    runs-on: windows-latest

    timeout-minutes: 420

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.5 For Nox
      uses: actions/setup-python@v1
      with:
        python-version: 3.5

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox-py2

    - name: Test
      run: |
        nox --force-color -e 'runtests-zeromq-3.5(coverage=True)' -- --sysinfo --xml=artifacts/xml-unittests-output/test-results.xml -v --run-destructive

    - name: Upload Test Results
      if: always()
      shell: bash
      run: |
        curl https://report.ci/report.py > report.py
          python report.py \
          --include-as-junit 'artifacts/xml-unittests-output/*.xml' \
          --log-as-python 'artifacts/logs/*.log'
          --merge ".*" \
          --name="Windows Server 2019" || echo "Failed to upload test results"

